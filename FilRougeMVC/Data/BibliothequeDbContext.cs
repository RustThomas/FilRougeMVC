// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace FilRougeMVC.Data;

public partial class BibliothequeDbContext : DbContext
{
    public BibliothequeDbContext(DbContextOptions<BibliothequeDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Admin> Admins { get; set; }

    public virtual DbSet<Adress> Adresses { get; set; }

    public virtual DbSet<Auteur> Auteurs { get; set; }

    public virtual DbSet<Domaine> Domaines { get; set; }

    public virtual DbSet<Emprunt> Emprunts { get; set; }

    public virtual DbSet<Lecteur> Lecteurs { get; set; }

    public virtual DbSet<Livre> Livres { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Admin>(entity =>
        {
            entity.Property(e => e.Id).HasDefaultValueSql("(NEXT VALUE FOR [PersonneSequence])");
        });

        modelBuilder.Entity<Auteur>(entity =>
        {
            entity.Property(e => e.Id).HasDefaultValueSql("(NEXT VALUE FOR [PersonneSequence])");
        });

        modelBuilder.Entity<Emprunt>(entity =>
        {
            entity.HasIndex(e => e.LecteurId, "IX_Emprunts_LecteurId");

            entity.HasIndex(e => e.LivreId, "IX_Emprunts_LivreId");

            entity.HasOne(d => d.Lecteur).WithMany(p => p.Emprunts).HasForeignKey(d => d.LecteurId);

            entity.HasOne(d => d.Livre).WithMany(p => p.Emprunts).HasForeignKey(d => d.LivreId);
        });

        modelBuilder.Entity<Lecteur>(entity =>
        {
            entity.HasIndex(e => e.AdresseId, "IX_Lecteurs_AdresseId");

            entity.Property(e => e.Id).HasDefaultValueSql("(NEXT VALUE FOR [PersonneSequence])");

            entity.HasOne(d => d.Adresse).WithMany(p => p.Lecteurs).HasForeignKey(d => d.AdresseId);
        });

        modelBuilder.Entity<Livre>(entity =>
        {
            entity.HasIndex(e => e.AuteurId, "IX_Livres_AuteurId");

            entity.HasIndex(e => e.DomaineId, "IX_Livres_DomaineId");

            entity.HasOne(d => d.Auteur).WithMany(p => p.Livres).HasForeignKey(d => d.AuteurId);

            entity.HasOne(d => d.Domaine).WithMany(p => p.Livres).HasForeignKey(d => d.DomaineId);
        });
        modelBuilder.HasSequence("PersonneSequence");

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}